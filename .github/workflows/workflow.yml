name: Workflow

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["*"]

jobs:
  build:
    name: Build and run all tests and checks
    timeout-minutes: 30
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: "3.10.8"

      - uses: Gr1N/setup-poetry@v8
        name: Install poetry
        with:
          poetry-version: 1.2.2

      - name: Install python dependencies
        run: make setup

      - name: Check types
        run: make lint

      - name: Check formatting
        run: make format

      - name: Run test
        run: make test

      - name: Build udfs
        run: make udfs

      - name: Upload udf artifacts for upload later
        uses: actions/upload-artifact@v2
        with:
          name: udfs
          path: ./dist
          retention-days: 1

  upload:
    name: Upload UDFs to s3
    timeout-minutes: 30
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v3

      - name: Download udf artifacts
        uses: actions/download-artifact@v2
        with:
          name: udfs
          path: ./dist

      - uses: jakejarvis/s3-sync-action@master
        env:
          AWS_S3_BUCKET: whylabs-snowflake-udfs
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "us-west-2"
          SOURCE_DIR: "dist"
          DEST_DIR: "udfs/v1/latest"

      - uses: jakejarvis/s3-sync-action@master
        env:
          AWS_S3_BUCKET: whylabs-snowflake-udfs
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "us-west-2"
          SOURCE_DIR: "dist"
          DEST_DIR: "udfs/v1/archive/${{ github.sha }}"

  release:
    name: Create a release
    if: ${{ github.event_name == 'push' }}
    needs: upload
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.sha }}
          release_name: Release ${{ github.sha }}
          draft: false
          prerelease: false
